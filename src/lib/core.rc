"${__BUD__CORE_RC:-false}" && return 0
readonly __BUD__CORE_RC=true

source "$(dirname "${BASH_SOURCE[0]}")/envvars.rc"

function app_name() {
  echo "${BUD_APP_NAME}"
}

function is_void_value() {
  [[ ${1} == "${BUD_VOID}" ]]
}

function void_value() {
  echo "${BUD_VOID}"
}

function message() {
  echo "${@}" >&2
}

function assert_that() {
  local _message="${1}"
  shift
  if ! eval "${@}"; then
    abort "$(printf "Condition was not satisfied:\n  Condition: %s\n  Detail: %s" "${_message}" "${*}")"
  fi
}

function print_stacktrace() {
  local _message="${1}"
  shift
  message "${_message}" "${@}"
  local _i=0
  local _e
  while _e="$(caller $_i)"; do
    # shellcheck disable=SC2086
    _e="$(__bud__format_caller ${_e})"
    message "  at ${_e}"
    _i=$((_i + 1))
  done
}

####
# Used when a condition is not met and a program should NOT go on.
function abort() {
  local _exit_code=1
  print_stacktrace "ERROR:" "${@}"
  exit "${_exit_code}"
}

trap abort ERR
