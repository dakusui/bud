"${__BUILD__CM_RC:-false}" && return 0
readonly __BUILD__CM_RC=-true

####
# BEGIN: Default implementations of user provided functions
function start_container() {
    echo "'start_containter' function is not defined!"
    exit 1
}

# Should print environment variables and their values, which should be respected when your application is run.
# E.g.,
# JF_PATH=/path/to/some/where:/somewhere/else
# PATH=/path/to/promised/land
function runtime_envvars() {
    echo "'runtime_envvars_containter' function is not defined!"
    exit 1
}

# Should print the name of the command to be "exec"ed in the docker image.
function command_name() {
    echo "'command_name_containter' function is not defined!"
    exit 1
}    

function container_name() {
    echo "'container_name' function is not defined!"
    exit 1
}
# END
####

function _num_target_containers() {
    local _container_name="${1}"
    docker ps | grep -c "${_container_name}"
}

function _exec_container() {
    local _container_name="${1}"
    shift
    local _envvar_args=() _i
    mapfile -t _envvars < <(runtime_envvars)
    for _i in "${_envvars[@]}"; do
	_envvar_args+=("-e" "${_i}")
    done
    docker exec -i "${_envvar_args[@]}" "${_container_name}" "$(command_name)" "${@}"
}

function _remove_container() {
    local _container_name="${1}"
    docker rm -f "${_container_name}" >&2
}

function _restart_container() {
    local _container_name="${1}"
    _remove_container "${_container_name}" && echo "Removed ${_container_name}" || echo "Failed to remove ${_container_name}. Perhaps it is not running."
    [[ "$(_num_target_containers "${_container_name}")" == "0" ]] && {
	echo -n "Starting ${_container_name}:" >&2
	start_container "${_container_name}" >&2
    } || {
	return 1
    }
}


function restart-container() {
    local _container_name="${1:?A container name must be specified.}"
    _restart_container "${_container_name}"
}

function exec-container {
    local _container_name="${1:?A container name must be specified.}"
    shift
    local _num_containers
    _num_containers="$(_num_target_containers "${_container_name}")"
    if [[ "${1}" == "--restart" ]] ; then
	shift
	_restart_container "${_container_name}"
    elif [[ "${1}" == "--restart-only" ]] ; then
	shift
	_restart_container "${_container_name}"
	return 0
    else
	[[ "${_num_containers}" != 1 ]] && {
	    echo "_num_containers:'${_num_containers}'" >&2
	    _restart_container "${_container_name}"
	}
    fi
    _exec_container "${_container_name}" "${@}"
}